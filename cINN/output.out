In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57393ef650>, <FrEIA.framework.Node object at 0x7f5739742c10>, <FrEIA.framework.Node object at 0x7f573878a850>, <FrEIA.framework.Node object at 0x7f573878a8d0>, <FrEIA.framework.Node object at 0x7f573878a950>, <FrEIA.framework.Node object at 0x7f573878a9d0>, <FrEIA.framework.Node object at 0x7f573878aa50>, <FrEIA.framework.Node object at 0x7f573878aad0>, <FrEIA.framework.Node object at 0x7f573878ab50>, <FrEIA.framework.OutputNode object at 0x7f573878ab90>, <FrEIA.framework.ConditionNode object at 0x7f57393ef890>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): dummy()
    (10): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.85065, validation loss -0.47719
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.36687, validation loss -2.44924
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.45896, validation loss -2.59510
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.30428, validation loss -3.17190
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.18045, validation loss -3.18770
Doing Evaluation on the model now
This is Epoch 100, training loss -3.47838, validation loss -3.47784
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.65611, validation loss -3.44675
Doing Evaluation on the model now
This is Epoch 140, training loss -3.71271, validation loss -3.66805
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.77639, validation loss -3.78595
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -4.04261, validation loss -4.01948
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -3.94943, validation loss -3.81588
Epoch   214: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 220, training loss -4.21468, validation loss -4.06509
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -3.96027, validation loss -3.86959
Doing Evaluation on the model now
This is Epoch 260, training loss -4.31012, validation loss -4.20398
Doing Evaluation on the model now
This is Epoch 280, training loss -4.44844, validation loss -4.30531
Saving the model down...
Epoch   288: reducing learning rate of group 0 to 6.4000e-04.
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57ef478310>, <FrEIA.framework.Node object at 0x7f573834e550>, <FrEIA.framework.Node object at 0x7f57393efad0>, <FrEIA.framework.Node object at 0x7f573834ed10>, <FrEIA.framework.Node object at 0x7f573834e990>, <FrEIA.framework.Node object at 0x7f573834eed0>, <FrEIA.framework.Node object at 0x7f573834ecd0>, <FrEIA.framework.Node object at 0x7f573834e2d0>, <FrEIA.framework.Node object at 0x7f573834e210>, <FrEIA.framework.OutputNode object at 0x7f573834e1d0>, <FrEIA.framework.ConditionNode object at 0x7f57394d7050>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): dummy()
    (10): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.68279, validation loss -0.48700
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.47994, validation loss -2.50333
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.94594, validation loss -3.04872
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.24030, validation loss -3.19099
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.43420, validation loss -3.47825
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.54514, validation loss -3.62356
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.52267, validation loss -3.51924
Epoch   135: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 140, training loss -3.97081, validation loss -3.79565
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.98795, validation loss -3.87824
Epoch   166: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 180, training loss -4.20476, validation loss -3.96878
Doing Evaluation on the model now
This is Epoch 200, training loss -4.05592, validation loss -3.99523
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.39238, validation loss -4.19935
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -4.42600, validation loss -4.15467
Doing Evaluation on the model now
This is Epoch 260, training loss -4.54583, validation loss -4.35793
Doing Evaluation on the model now
This is Epoch 280, training loss -3.58634, validation loss -4.24410
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f573878ae50>, <FrEIA.framework.Node object at 0x7f573878ae90>, <FrEIA.framework.Node object at 0x7f573878a950>, <FrEIA.framework.Node object at 0x7f573878aa90>, <FrEIA.framework.Node object at 0x7f573878abd0>, <FrEIA.framework.Node object at 0x7f573878ac10>, <FrEIA.framework.Node object at 0x7f573878aed0>, <FrEIA.framework.Node object at 0x7f573878a910>, <FrEIA.framework.Node object at 0x7f573878af10>, <FrEIA.framework.OutputNode object at 0x7f573878a990>, <FrEIA.framework.ConditionNode object at 0x7f573878ac90>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): dummy()
    (10): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.74833, validation loss -0.49761
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.36499, validation loss -2.36801
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.87388, validation loss -2.85628
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.28710, validation loss -3.17567
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.35664, validation loss -3.44018
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.56687, validation loss -3.53035
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -2.80153, validation loss -3.19741
Doing Evaluation on the model now
This is Epoch 140, training loss -3.43087, validation loss -3.46671
Doing Evaluation on the model now
This is Epoch 160, training loss -3.81119, validation loss -3.82248
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -3.70989, validation loss -3.65588
Doing Evaluation on the model now
This is Epoch 200, training loss -3.87326, validation loss -3.89188
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.09404, validation loss -4.14060
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -4.10038, validation loss -3.97770
Doing Evaluation on the model now
This is Epoch 260, training loss -3.90347, validation loss -3.86565
Doing Evaluation on the model now
This is Epoch 280, training loss -4.33805, validation loss -4.16062
Saving the model down...
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f5739742c10>, <FrEIA.framework.Node object at 0x7f5738736ad0>, <FrEIA.framework.Node object at 0x7f5738736790>, <FrEIA.framework.Node object at 0x7f5738736190>, <FrEIA.framework.Node object at 0x7f57416a3350>, <FrEIA.framework.Node object at 0x7f57394d7050>, <FrEIA.framework.Node object at 0x7f5739663990>, <FrEIA.framework.Node object at 0x7f5739663a90>, <FrEIA.framework.Node object at 0x7f57387d7a50>, <FrEIA.framework.Node object at 0x7f5738346090>, <FrEIA.framework.Node object at 0x7f5738346590>, <FrEIA.framework.OutputNode object at 0x7f5738346190>, <FrEIA.framework.ConditionNode object at 0x7f5739742d10>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): dummy()
    (12): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.63062, validation loss -0.44414
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.55540, validation loss -2.64382
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -3.02082, validation loss -3.05946
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -2.71900, validation loss -2.60804
Doing Evaluation on the model now
This is Epoch 80, training loss -3.45667, validation loss -3.39943
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.57514, validation loss -3.35546
Doing Evaluation on the model now
This is Epoch 120, training loss -3.42799, validation loss -3.43686
Doing Evaluation on the model now
This is Epoch 140, training loss -3.77299, validation loss -3.76573
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.94025, validation loss -3.88263
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -3.96504, validation loss -3.93786
Doing Evaluation on the model now
This is Epoch 200, training loss -3.67296, validation loss -3.19792
Doing Evaluation on the model now
This is Epoch 220, training loss -4.16644, validation loss -3.82798
Doing Evaluation on the model now
This is Epoch 240, training loss -3.75872, validation loss -3.71908
Doing Evaluation on the model now
This is Epoch 260, training loss -4.25549, validation loss -3.67564
Doing Evaluation on the model now
This is Epoch 280, training loss -4.41322, validation loss -4.10026
Saving the model down...
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f5738346450>, <FrEIA.framework.Node object at 0x7f5738346e10>, <FrEIA.framework.Node object at 0x7f5739543450>, <FrEIA.framework.Node object at 0x7f5739543410>, <FrEIA.framework.Node object at 0x7f5739543690>, <FrEIA.framework.Node object at 0x7f5741eda6d0>, <FrEIA.framework.Node object at 0x7f573953c750>, <FrEIA.framework.Node object at 0x7f573878d350>, <FrEIA.framework.Node object at 0x7f573878d750>, <FrEIA.framework.Node object at 0x7f573878d650>, <FrEIA.framework.Node object at 0x7f573878ad50>, <FrEIA.framework.OutputNode object at 0x7f573878aed0>, <FrEIA.framework.ConditionNode object at 0x7f5738346610>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): dummy()
    (12): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.97035, validation loss -0.39886
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.51628, validation loss -2.47544
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -3.06200, validation loss -2.93259
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.22406, validation loss -3.21671
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.30546, validation loss -3.33100
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.63731, validation loss -3.55103
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.86096, validation loss -3.76272
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.79157, validation loss -3.82059
Doing Evaluation on the model now
This is Epoch 160, training loss -3.60514, validation loss -3.58115
Epoch   171: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 180, training loss -3.94888, validation loss -3.76103
Doing Evaluation on the model now
This is Epoch 200, training loss -4.27256, validation loss -4.09322
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -3.99892, validation loss -4.14827
Doing Evaluation on the model now
This is Epoch 240, training loss -4.38574, validation loss -4.20709
Doing Evaluation on the model now
This is Epoch 260, training loss -4.46689, validation loss -3.10037
Doing Evaluation on the model now
This is Epoch 280, training loss -3.66362, validation loss -4.17374
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f5738799c10>, <FrEIA.framework.Node object at 0x7f5738799d10>, <FrEIA.framework.Node object at 0x7f5738799e50>, <FrEIA.framework.Node object at 0x7f5738799e10>, <FrEIA.framework.Node object at 0x7f5738799990>, <FrEIA.framework.Node object at 0x7f5738799a90>, <FrEIA.framework.Node object at 0x7f5738799c50>, <FrEIA.framework.Node object at 0x7f5739742c50>, <FrEIA.framework.Node object at 0x7f573878db90>, <FrEIA.framework.Node object at 0x7f573878d090>, <FrEIA.framework.Node object at 0x7f573878da50>, <FrEIA.framework.OutputNode object at 0x7f573878d710>, <FrEIA.framework.ConditionNode object at 0x7f5739637f50>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): dummy()
    (12): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.04161, validation loss -0.33347
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.30315, validation loss -2.39972
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.63863, validation loss -2.73596
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.23254, validation loss -3.05210
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.40932, validation loss -3.22586
Doing Evaluation on the model now
This is Epoch 100, training loss -3.10697, validation loss -3.19958
Doing Evaluation on the model now
This is Epoch 120, training loss -3.64797, validation loss -3.60384
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.58759, validation loss -3.59047
Doing Evaluation on the model now
This is Epoch 160, training loss -3.89108, validation loss -3.83009
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -4.01627, validation loss -3.95843
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -3.81596, validation loss -3.79904
Epoch   205: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 220, training loss -4.18020, validation loss -3.92142
Doing Evaluation on the model now
This is Epoch 240, training loss -4.14106, validation loss -3.98363
Doing Evaluation on the model now
This is Epoch 260, training loss -4.38377, validation loss -4.24122
Saving the model down...
Doing Evaluation on the model now
This is Epoch 280, training loss -4.37304, validation loss -4.38233
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f573878aa50>, <FrEIA.framework.Node object at 0x7f573878afd0>, <FrEIA.framework.Node object at 0x7f573878add0>, <FrEIA.framework.Node object at 0x7f573878ab10>, <FrEIA.framework.Node object at 0x7f573878a890>, <FrEIA.framework.Node object at 0x7f573878aa10>, <FrEIA.framework.Node object at 0x7f573878ac10>, <FrEIA.framework.Node object at 0x7f573878ab90>, <FrEIA.framework.Node object at 0x7f573878af10>, <FrEIA.framework.Node object at 0x7f573878ac90>, <FrEIA.framework.Node object at 0x7f57383461d0>, <FrEIA.framework.Node object at 0x7f5738346b90>, <FrEIA.framework.Node object at 0x7f5738346610>, <FrEIA.framework.OutputNode object at 0x7f5738346d10>, <FrEIA.framework.ConditionNode object at 0x7f574171a210>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): dummy()
    (14): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.02369, validation loss -0.33900
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.38661, validation loss -2.51363
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -1.42272, validation loss -1.66498
Doing Evaluation on the model now
This is Epoch 60, training loss -3.22786, validation loss -3.21748
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.39790, validation loss -3.35143
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.47222, validation loss -3.38953
Doing Evaluation on the model now
This is Epoch 120, training loss -3.32176, validation loss -3.44753
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.67119, validation loss -3.69916
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -4.05737, validation loss -3.93835
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -3.65534, validation loss -3.74952
Doing Evaluation on the model now
This is Epoch 200, training loss -4.19681, validation loss -4.14695
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.13919, validation loss -4.05599
Doing Evaluation on the model now
This is Epoch 240, training loss -3.98246, validation loss -3.88447
Epoch   255: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 260, training loss -4.42936, validation loss -4.19095
Doing Evaluation on the model now
This is Epoch 280, training loss -4.37237, validation loss -4.22012
Saving the model down...
Epoch   292: reducing learning rate of group 0 to 6.4000e-04.
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57ef478310>, <FrEIA.framework.Node object at 0x7f5738756cd0>, <FrEIA.framework.Node object at 0x7f5738756c10>, <FrEIA.framework.Node object at 0x7f5738756210>, <FrEIA.framework.Node object at 0x7f5738756e90>, <FrEIA.framework.Node object at 0x7f5738756750>, <FrEIA.framework.Node object at 0x7f5738756dd0>, <FrEIA.framework.Node object at 0x7f5738756890>, <FrEIA.framework.Node object at 0x7f5738756a10>, <FrEIA.framework.Node object at 0x7f5738732310>, <FrEIA.framework.Node object at 0x7f5738732490>, <FrEIA.framework.Node object at 0x7f5738732590>, <FrEIA.framework.Node object at 0x7f57387329d0>, <FrEIA.framework.OutputNode object at 0x7f5738732a90>, <FrEIA.framework.ConditionNode object at 0x7f5739637bd0>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): dummy()
    (14): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.79617, validation loss -0.34741
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.47910, validation loss -2.53726
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.87791, validation loss -2.89178
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -2.86712, validation loss -2.89076
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.42034, validation loss -3.37157
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.61854, validation loss -3.39133
Doing Evaluation on the model now
This is Epoch 120, training loss -3.45983, validation loss -3.44834
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.64177, validation loss -3.73560
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.98813, validation loss -3.83661
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -3.96581, validation loss -3.94009
Doing Evaluation on the model now
This is Epoch 200, training loss -3.96048, validation loss -3.88491
Doing Evaluation on the model now
This is Epoch 220, training loss -3.29918, validation loss -3.63438
Epoch   230: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 240, training loss -4.30294, validation loss -4.22858
Saving the model down...
Doing Evaluation on the model now
This is Epoch 260, training loss -4.30325, validation loss -4.12483
Doing Evaluation on the model now
This is Epoch 280, training loss -4.49411, validation loss -4.28042
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57416a3350>, <FrEIA.framework.Node object at 0x7f57384e0110>, <FrEIA.framework.Node object at 0x7f57384e0610>, <FrEIA.framework.Node object at 0x7f57384e0510>, <FrEIA.framework.Node object at 0x7f5738756590>, <FrEIA.framework.Node object at 0x7f5738756190>, <FrEIA.framework.Node object at 0x7f5738756f10>, <FrEIA.framework.Node object at 0x7f57387562d0>, <FrEIA.framework.Node object at 0x7f5738756090>, <FrEIA.framework.Node object at 0x7f5738756a50>, <FrEIA.framework.Node object at 0x7f5738756b90>, <FrEIA.framework.Node object at 0x7f57387560d0>, <FrEIA.framework.Node object at 0x7f5738756410>, <FrEIA.framework.OutputNode object at 0x7f5738756310>, <FrEIA.framework.ConditionNode object at 0x7f57474b8110>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): dummy()
    (14): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.94811, validation loss -0.31310
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.41102, validation loss -2.54081
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -1.99887, validation loss -2.11625
Doing Evaluation on the model now
This is Epoch 60, training loss -3.13100, validation loss -3.14802
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.41101, validation loss -3.47502
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.61085, validation loss -3.57888
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.69835, validation loss -3.62997
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -1.51909, validation loss -1.92053
Doing Evaluation on the model now
This is Epoch 160, training loss -3.67652, validation loss -3.70633
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -4.05930, validation loss -4.07884
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -4.17727, validation loss -4.09450
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.23688, validation loss -3.70537
Doing Evaluation on the model now
This is Epoch 240, training loss -4.31423, validation loss -4.16126
Doing Evaluation on the model now
This is Epoch 260, training loss -3.81673, validation loss -3.78365
Epoch   268: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 280, training loss -4.52302, validation loss -4.42480
Saving the model down...
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f5738346e90>, <FrEIA.framework.Node object at 0x7f5738346910>, <FrEIA.framework.Node object at 0x7f5738346ed0>, <FrEIA.framework.Node object at 0x7f5738346490>, <FrEIA.framework.Node object at 0x7f5738346750>, <FrEIA.framework.Node object at 0x7f5738346e10>, <FrEIA.framework.Node object at 0x7f5738346c90>, <FrEIA.framework.Node object at 0x7f5738346390>, <FrEIA.framework.Node object at 0x7f57383468d0>, <FrEIA.framework.Node object at 0x7f5738346850>, <FrEIA.framework.Node object at 0x7f5738346a50>, <FrEIA.framework.Node object at 0x7f5738346890>, <FrEIA.framework.Node object at 0x7f5738346710>, <FrEIA.framework.Node object at 0x7f57383466d0>, <FrEIA.framework.Node object at 0x7f5738346c50>, <FrEIA.framework.OutputNode object at 0x7f57386edf90>, <FrEIA.framework.ConditionNode object at 0x7f5739663ad0>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): dummy()
    (16): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 0.89446, validation loss -0.23624
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.22811, validation loss -2.40985
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -3.13846, validation loss -3.16240
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.31748, validation loss -3.33569
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.45961, validation loss -3.48702
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.36871, validation loss -3.38961
Epoch   116: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 120, training loss -3.84867, validation loss -3.77146
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.79744, validation loss -3.79619
Doing Evaluation on the model now
This is Epoch 160, training loss -3.33855, validation loss -3.72480
Doing Evaluation on the model now
This is Epoch 180, training loss -1.99724, validation loss -2.51423
Epoch   198: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 200, training loss -3.99556, validation loss -3.98959
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.30917, validation loss -4.16881
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -4.25191, validation loss -4.13069
Epoch   246: reducing learning rate of group 0 to 5.1200e-04.
Doing Evaluation on the model now
This is Epoch 260, training loss -3.68176, validation loss -3.35142
Epoch   279: reducing learning rate of group 0 to 4.0960e-04.
Doing Evaluation on the model now
This is Epoch 280, training loss -4.50249, validation loss -4.35060
Saving the model down...
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57394d7050>, <FrEIA.framework.Node object at 0x7f57386eda50>, <FrEIA.framework.Node object at 0x7f57386ed7d0>, <FrEIA.framework.Node object at 0x7f57386ed0d0>, <FrEIA.framework.Node object at 0x7f57386ed410>, <FrEIA.framework.Node object at 0x7f57386ed950>, <FrEIA.framework.Node object at 0x7f57386ed290>, <FrEIA.framework.Node object at 0x7f57386eda10>, <FrEIA.framework.Node object at 0x7f57386ede90>, <FrEIA.framework.Node object at 0x7f57386edf10>, <FrEIA.framework.Node object at 0x7f57386edb10>, <FrEIA.framework.Node object at 0x7f57386ed8d0>, <FrEIA.framework.Node object at 0x7f57386ed4d0>, <FrEIA.framework.Node object at 0x7f57386ed490>, <FrEIA.framework.Node object at 0x7f57386ed5d0>, <FrEIA.framework.OutputNode object at 0x7f57386ed150>, <FrEIA.framework.ConditionNode object at 0x7f5741eda6d0>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): dummy()
    (16): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.28569, validation loss -0.07563
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.51654, validation loss -2.53459
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -3.04162, validation loss -3.06154
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.26384, validation loss -3.20719
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -2.97502, validation loss -3.10868
Doing Evaluation on the model now
This is Epoch 100, training loss -3.72702, validation loss -3.29679
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -1.66307, validation loss -1.91208
Epoch   138: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 140, training loss -3.55189, validation loss -3.56941
Doing Evaluation on the model now
This is Epoch 160, training loss -3.91068, validation loss -3.82967
Saving the model down...
Doing Evaluation on the model now
This is Epoch 180, training loss -4.04304, validation loss -3.92069
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -3.68128, validation loss -3.71228
Doing Evaluation on the model now
This is Epoch 220, training loss -4.25657, validation loss -4.07411
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -3.99333, validation loss -3.69162
Doing Evaluation on the model now
This is Epoch 260, training loss -4.36310, validation loss -4.22167
Doing Evaluation on the model now
This is Epoch 280, training loss -4.36683, validation loss -3.80367
Epoch   285: reducing learning rate of group 0 to 6.4000e-04.
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57416a3350>, <FrEIA.framework.Node object at 0x7f5738642f90>, <FrEIA.framework.Node object at 0x7f5738642d10>, <FrEIA.framework.Node object at 0x7f5738642090>, <FrEIA.framework.Node object at 0x7f57386422d0>, <FrEIA.framework.Node object at 0x7f5738642890>, <FrEIA.framework.Node object at 0x7f5738642e10>, <FrEIA.framework.Node object at 0x7f5738642a90>, <FrEIA.framework.Node object at 0x7f5738642290>, <FrEIA.framework.Node object at 0x7f5738642350>, <FrEIA.framework.Node object at 0x7f57386426d0>, <FrEIA.framework.Node object at 0x7f5738642850>, <FrEIA.framework.Node object at 0x7f5738642a50>, <FrEIA.framework.Node object at 0x7f5738642d50>, <FrEIA.framework.Node object at 0x7f5738642fd0>, <FrEIA.framework.OutputNode object at 0x7f5738642ad0>, <FrEIA.framework.ConditionNode object at 0x7f574463c610>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): dummy()
    (16): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.14024, validation loss -0.18869
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.42096, validation loss -1.92902
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.87991, validation loss -2.37747
Doing Evaluation on the model now
This is Epoch 60, training loss -2.30955, validation loss -2.34809
Doing Evaluation on the model now
This is Epoch 80, training loss -3.37953, validation loss -3.36477
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.38340, validation loss -3.41010
Saving the model down...
Epoch   105: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 120, training loss -3.03339, validation loss -2.96085
Doing Evaluation on the model now
This is Epoch 140, training loss -3.75357, validation loss -3.71957
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.72024, validation loss -3.62352
Doing Evaluation on the model now
This is Epoch 180, training loss -3.96509, validation loss -3.88722
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -3.92332, validation loss -3.91644
Doing Evaluation on the model now
This is Epoch 220, training loss -3.92375, validation loss -3.83548
Epoch   228: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 240, training loss -3.74777, validation loss -3.55394
Doing Evaluation on the model now
This is Epoch 260, training loss -4.21872, validation loss -4.13081
Saving the model down...
Doing Evaluation on the model now
This is Epoch 280, training loss -3.28433, validation loss -3.52046
Epoch   299: reducing learning rate of group 0 to 5.1200e-04.
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f5738756250>, <FrEIA.framework.Node object at 0x7f5738756c90>, <FrEIA.framework.Node object at 0x7f57387567d0>, <FrEIA.framework.Node object at 0x7f5738756d90>, <FrEIA.framework.Node object at 0x7f5738756050>, <FrEIA.framework.Node object at 0x7f5738756610>, <FrEIA.framework.Node object at 0x7f57387565d0>, <FrEIA.framework.Node object at 0x7f5738756a50>, <FrEIA.framework.Node object at 0x7f5738756350>, <FrEIA.framework.Node object at 0x7f5738756910>, <FrEIA.framework.Node object at 0x7f5738756390>, <FrEIA.framework.Node object at 0x7f5738756d50>, <FrEIA.framework.Node object at 0x7f5738756fd0>, <FrEIA.framework.Node object at 0x7f57387564d0>, <FrEIA.framework.Node object at 0x7f5738756550>, <FrEIA.framework.Node object at 0x7f57386ed450>, <FrEIA.framework.Node object at 0x7f57386edfd0>, <FrEIA.framework.OutputNode object at 0x7f57386ed710>, <FrEIA.framework.ConditionNode object at 0x7f5738642550>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): dummy()
    (18): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.56124, validation loss 0.35636
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.25406, validation loss -2.26151
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -3.05663, validation loss -2.52549
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.16482, validation loss -3.25947
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.02122, validation loss -3.05345
Epoch    85: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 100, training loss -3.47071, validation loss -3.44113
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.65573, validation loss -3.53512
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.76187, validation loss -3.71295
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.91813, validation loss -3.69353
Doing Evaluation on the model now
This is Epoch 180, training loss -4.11661, validation loss -3.38182
Doing Evaluation on the model now
This is Epoch 200, training loss -3.83414, validation loss -3.79746
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.20457, validation loss -4.07318
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -3.56853, validation loss -3.69982
Doing Evaluation on the model now
This is Epoch 260, training loss -4.36631, validation loss -4.25262
Saving the model down...
Doing Evaluation on the model now
This is Epoch 280, training loss -3.61450, validation loss -3.89288
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57386f1110>, <FrEIA.framework.Node object at 0x7f57386f1190>, <FrEIA.framework.Node object at 0x7f57386f1490>, <FrEIA.framework.Node object at 0x7f57386f1910>, <FrEIA.framework.Node object at 0x7f57386f12d0>, <FrEIA.framework.Node object at 0x7f57386f1550>, <FrEIA.framework.Node object at 0x7f57386f1610>, <FrEIA.framework.Node object at 0x7f57386f1050>, <FrEIA.framework.Node object at 0x7f57386f1dd0>, <FrEIA.framework.Node object at 0x7f57386f1810>, <FrEIA.framework.Node object at 0x7f57386f1590>, <FrEIA.framework.Node object at 0x7f57386f16d0>, <FrEIA.framework.Node object at 0x7f57386f1090>, <FrEIA.framework.Node object at 0x7f57386f1650>, <FrEIA.framework.Node object at 0x7f57386f1510>, <FrEIA.framework.Node object at 0x7f57386f1e50>, <FrEIA.framework.Node object at 0x7f57386f1290>, <FrEIA.framework.OutputNode object at 0x7f57386f1690>, <FrEIA.framework.ConditionNode object at 0x7f5738641e90>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): dummy()
    (18): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.21196, validation loss 0.01441
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.32021, validation loss -2.23306
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.95825, validation loss -2.97621
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.28311, validation loss -3.09476
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.37439, validation loss -3.35214
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.63286, validation loss -3.57634
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.11441, validation loss -3.20734
Doing Evaluation on the model now
This is Epoch 140, training loss -3.69129, validation loss -3.63476
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.59724, validation loss -3.58268
Epoch   175: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 180, training loss -4.15439, validation loss -4.03458
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -3.58397, validation loss -3.58103
Epoch   213: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 220, training loss -4.13784, validation loss -3.91636
Doing Evaluation on the model now
This is Epoch 240, training loss -4.41699, validation loss -4.30234
Saving the model down...
Doing Evaluation on the model now
This is Epoch 260, training loss -4.47211, validation loss -4.32467
Doing Evaluation on the model now
This is Epoch 280, training loss -4.50230, validation loss -4.47328
Saving the model down...
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57384e0810>, <FrEIA.framework.Node object at 0x7f57384e0110>, <FrEIA.framework.Node object at 0x7f57384e0210>, <FrEIA.framework.Node object at 0x7f57384e0590>, <FrEIA.framework.Node object at 0x7f57384e0c90>, <FrEIA.framework.Node object at 0x7f57384e0890>, <FrEIA.framework.Node object at 0x7f57384e0bd0>, <FrEIA.framework.Node object at 0x7f57384e0f90>, <FrEIA.framework.Node object at 0x7f57384e06d0>, <FrEIA.framework.Node object at 0x7f57384e0250>, <FrEIA.framework.Node object at 0x7f57384e0ad0>, <FrEIA.framework.Node object at 0x7f57384e0d10>, <FrEIA.framework.Node object at 0x7f57384e0750>, <FrEIA.framework.Node object at 0x7f57384e0390>, <FrEIA.framework.Node object at 0x7f57384e00d0>, <FrEIA.framework.Node object at 0x7f57384e0b90>, <FrEIA.framework.Node object at 0x7f57384e0b10>, <FrEIA.framework.OutputNode object at 0x7f5738756b10>, <FrEIA.framework.ConditionNode object at 0x7f57384e08d0>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): dummy()
    (18): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.04845, validation loss -0.01117
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.08081, validation loss -2.30290
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.77926, validation loss -2.81517
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.13183, validation loss -3.21527
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.05988, validation loss -3.11680
Doing Evaluation on the model now
This is Epoch 100, training loss -3.43575, validation loss -3.37242
Saving the model down...
Epoch   109: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 120, training loss -3.65682, validation loss -3.57299
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.85638, validation loss -3.81728
Saving the model down...
Doing Evaluation on the model now
This is Epoch 160, training loss -3.85005, validation loss -3.83212
Doing Evaluation on the model now
This is Epoch 180, training loss -3.98307, validation loss -3.72727
Doing Evaluation on the model now
This is Epoch 200, training loss -3.98660, validation loss -4.06443
Saving the model down...
Doing Evaluation on the model now
This is Epoch 220, training loss -4.15556, validation loss -4.11687
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -2.60799, validation loss -3.02067
Epoch   260: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 260, training loss -4.44259, validation loss -4.30586
Saving the model down...
Doing Evaluation on the model now
This is Epoch 280, training loss -4.51785, validation loss -4.30799
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57386f1950>, <FrEIA.framework.Node object at 0x7f57386f1110>, <FrEIA.framework.Node object at 0x7f57386f1b90>, <FrEIA.framework.Node object at 0x7f57386f1210>, <FrEIA.framework.Node object at 0x7f57386f1790>, <FrEIA.framework.Node object at 0x7f57386f1190>, <FrEIA.framework.Node object at 0x7f57386f1510>, <FrEIA.framework.Node object at 0x7f57386f1f10>, <FrEIA.framework.Node object at 0x7f57386f1b50>, <FrEIA.framework.Node object at 0x7f57386f1850>, <FrEIA.framework.Node object at 0x7f57386f15d0>, <FrEIA.framework.Node object at 0x7f57386f1250>, <FrEIA.framework.Node object at 0x7f57386f1350>, <FrEIA.framework.Node object at 0x7f57386f1490>, <FrEIA.framework.Node object at 0x7f57386f1450>, <FrEIA.framework.Node object at 0x7f57386f1590>, <FrEIA.framework.Node object at 0x7f573832c8d0>, <FrEIA.framework.Node object at 0x7f573832c350>, <FrEIA.framework.Node object at 0x7f573832c050>, <FrEIA.framework.OutputNode object at 0x7f573832ca50>, <FrEIA.framework.ConditionNode object at 0x7f57386f1810>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'coupling_8' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_8' takes the following inputs:
	 Output #0 of node 'coupling_8' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_8' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (18): PermuteRandom()
    (19): dummy()
    (20): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.51944, validation loss -0.16014
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -2.30099, validation loss -2.28519
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.64261, validation loss -2.79050
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.01518, validation loss -2.94305
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -2.71058, validation loss -2.81802
Doing Evaluation on the model now
This is Epoch 100, training loss -3.31775, validation loss -3.07376
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.61062, validation loss -3.55744
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.64456, validation loss -3.58771
Doing Evaluation on the model now
This is Epoch 160, training loss -3.06647, validation loss -1.64407
Doing Evaluation on the model now
This is Epoch 180, training loss -4.04861, validation loss -4.01027
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -4.00491, validation loss -3.91145
Epoch   203: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 220, training loss -4.34297, validation loss -4.23342
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -4.40631, validation loss -4.30892
Doing Evaluation on the model now
This is Epoch 260, training loss -4.16262, validation loss -4.02876
Epoch   274: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 280, training loss -4.14423, validation loss -3.89958
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f5738736190>, <FrEIA.framework.Node object at 0x7f573832c390>, <FrEIA.framework.Node object at 0x7f573832c690>, <FrEIA.framework.Node object at 0x7f573832ca90>, <FrEIA.framework.Node object at 0x7f573832c510>, <FrEIA.framework.Node object at 0x7f573832cc90>, <FrEIA.framework.Node object at 0x7f573832ced0>, <FrEIA.framework.Node object at 0x7f5738641450>, <FrEIA.framework.Node object at 0x7f57386410d0>, <FrEIA.framework.Node object at 0x7f5738641810>, <FrEIA.framework.Node object at 0x7f5738641210>, <FrEIA.framework.Node object at 0x7f5738641150>, <FrEIA.framework.Node object at 0x7f5738641490>, <FrEIA.framework.Node object at 0x7f5738641510>, <FrEIA.framework.Node object at 0x7f5738641710>, <FrEIA.framework.Node object at 0x7f5738641950>, <FrEIA.framework.Node object at 0x7f5738641b10>, <FrEIA.framework.Node object at 0x7f5738641d10>, <FrEIA.framework.Node object at 0x7f57386413d0>, <FrEIA.framework.OutputNode object at 0x7f5738641cd0>, <FrEIA.framework.ConditionNode object at 0x7f57393ef7d0>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'coupling_8' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_8' takes the following inputs:
	 Output #0 of node 'coupling_8' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_8' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (18): PermuteRandom()
    (19): dummy()
    (20): None
  )
)
Start training now...
Starting training now
Doing Evaluation on the model now
This is Epoch 0, training loss 1.60122, validation loss -0.03711
Saving the model down...
Doing Evaluation on the model now
This is Epoch 20, training loss -1.81858, validation loss -1.95624
Saving the model down...
Doing Evaluation on the model now
This is Epoch 40, training loss -2.71738, validation loss -2.68707
Saving the model down...
Doing Evaluation on the model now
This is Epoch 60, training loss -3.14496, validation loss -2.95446
Saving the model down...
Doing Evaluation on the model now
This is Epoch 80, training loss -3.25840, validation loss -3.35862
Saving the model down...
Doing Evaluation on the model now
This is Epoch 100, training loss -3.13812, validation loss -3.32220
Saving the model down...
Doing Evaluation on the model now
This is Epoch 120, training loss -3.67483, validation loss -3.51338
Saving the model down...
Doing Evaluation on the model now
This is Epoch 140, training loss -3.60846, validation loss -3.04805
Epoch   145: reducing learning rate of group 0 to 8.0000e-04.
Doing Evaluation on the model now
This is Epoch 160, training loss -2.91144, validation loss -3.54660
Doing Evaluation on the model now
This is Epoch 180, training loss -4.00193, validation loss -4.02865
Saving the model down...
Doing Evaluation on the model now
This is Epoch 200, training loss -3.84741, validation loss -3.68055
Doing Evaluation on the model now
This is Epoch 220, training loss -4.15576, validation loss -4.03492
Saving the model down...
Doing Evaluation on the model now
This is Epoch 240, training loss -3.18037, validation loss -3.32906
Epoch   257: reducing learning rate of group 0 to 6.4000e-04.
Doing Evaluation on the model now
This is Epoch 260, training loss -4.20145, validation loss -4.11321
Doing Evaluation on the model now
This is Epoch 280, training loss -4.04186, validation loss -4.14214
In read_data, flags.data_set = Yang_sim
shape of data_x (10000, 14)
shape of data_y (10000, 2000)
total number of training sample is 8000, the dimension of the feature is 14
total number of test sample is 2000
Making network now
The nodes are: [<FrEIA.framework.InputNode object at 0x7f57386e1e90>, <FrEIA.framework.Node object at 0x7f57386e13d0>, <FrEIA.framework.Node object at 0x7f57386e1050>, <FrEIA.framework.Node object at 0x7f57386e1890>, <FrEIA.framework.Node object at 0x7f57386e1090>, <FrEIA.framework.Node object at 0x7f57386e16d0>, <FrEIA.framework.Node object at 0x7f57386e1550>, <FrEIA.framework.Node object at 0x7f57386e1950>, <FrEIA.framework.Node object at 0x7f57386e1d90>, <FrEIA.framework.Node object at 0x7f57386e1410>, <FrEIA.framework.Node object at 0x7f57386e1510>, <FrEIA.framework.Node object at 0x7f57386e1750>, <FrEIA.framework.Node object at 0x7f57386e1a50>, <FrEIA.framework.Node object at 0x7f57386e1d10>, <FrEIA.framework.Node object at 0x7f57386e1f90>, <FrEIA.framework.Node object at 0x7f57386e1710>, <FrEIA.framework.Node object at 0x7f57386e1b90>, <FrEIA.framework.Node object at 0x7f57386e1f10>, <FrEIA.framework.Node object at 0x7f57386e1c10>, <FrEIA.framework.OutputNode object at 0x7f57386e1810>, <FrEIA.framework.ConditionNode object at 0x7f57386ed190>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'coupling_8' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_8' takes the following inputs:
	 Output #0 of node 'coupling_8' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_8' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (18): PermuteRandom()
    (19): dummy()
    (20): None
  )
)