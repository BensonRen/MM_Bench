fake_2k
Retrieving flag object for parameters
after removing prefix models/, now model_dir is: fake_2k
This is a meta-material dataset
getting data files...
['train79.csv', 'train90.csv', 'train42.csv', 'train93.csv', 'train32.csv', 'train6.csv', 'train67.csv', 'train28.csv', 'train29.csv', 'train3.csv', 'train64.csv', 'train115.csv', 'train60.csv', 'train86.csv', 'train8.csv', 'train45.csv', 'train83.csv', 'train18.csv', 'train4.csv', 'train65.csv', 'train82.csv', 'train62.csv', 'train24.csv', 'train87.csv', 'train40.csv', 'train43.csv', 'train116.csv', 'train106.csv', 'train54.csv', 'train41.csv', 'train44.csv', 'train75.csv', 'train99.csv', 'train35.csv', 'train103.csv', 'train108.csv', 'train73.csv', 'train33.csv', 'train39.csv', 'train100.csv', 'train31.csv', 'train71.csv', 'train13.csv', 'train17.csv', 'train58.csv', 'train21.csv', 'train96.csv', 'train114.csv', 'train112.csv', 'train57.csv', 'train77.csv', 'train37.csv', 'train53.csv', 'train88.csv', 'train109.csv', 'train72.csv', 'train49.csv', 'train46.csv', 'train101.csv', 'train74.csv', 'train50.csv', 'train1.csv', 'train19.csv', 'train36.csv', 'train70.csv', 'train20.csv', 'train63.csv', 'train78.csv', 'train22.csv', 'train30.csv', 'train34.csv', 'train66.csv', 'train10.csv', 'train110.csv', 'train117.csv', 'train51.csv', 'train102.csv', 'train84.csv', 'train26.csv', 'train59.csv', 'train7.csv', 'train97.csv', 'train76.csv', 'train81.csv', 'train23.csv', 'train27.csv', 'train14.csv', 'train12.csv', 'train120.csv', 'train118.csv', 'train48.csv', 'train105.csv', 'train61.csv', 'train92.csv', 'train89.csv', 'train47.csv', 'train25.csv', 'train113.csv', 'train16.csv', 'train98.csv', 'train91.csv', 'train11.csv', 'train52.csv', 'train119.csv', 'train85.csv', 'train5.csv', 'train56.csv', 'train94.csv', 'train80.csv', 'train9.csv', 'train107.csv', 'train111.csv', 'train68.csv', 'train95.csv', 'train104.csv', 'train69.csv', 'train2.csv', 'train38.csv', 'train55.csv', 'train15.csv']
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
For feature 0, the max is 0.6000000238418579 and min is 0.30000001192092896
For feature 1, the max is 1.5 and min is 1.0
For feature 2, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 3, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 4, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 5, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 6, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 7, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 8, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 9, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 10, the max is 0.7853999733924866 and min is -0.7853999733924866
For feature 11, the max is 0.7853999733924866 and min is -0.7853999733924866
For feature 12, the max is 0.7853999733924866 and min is -0.7853999733924866
For feature 13, the max is 0.7853999733924866 and min is -0.7853999733924866
Splitting training data into test set, the ratio is: 0.02
total number of training samples is 57506
total number of test samples is 1174 length of an input spectrum is 2001
downsampling output curves
length of downsampled train spectra is 2000 for first, 2000 for final,  set final layer size to be compatible with this number
length of downsampled test spectra is 2000,  set final layer size to be compatible with this number
generating torch dataset
After normalization:
For feature 0, the max is 1.0 and min is -1.0
For feature 1, the max is 1.0 and min is -1.0
For feature 2, the max is 1.0 and min is -1.0
For feature 3, the max is 1.0 and min is -1.0
For feature 4, the max is 1.0 and min is -1.0
For feature 5, the max is 1.0 and min is -1.0
For feature 6, the max is 1.0 and min is -1.0
For feature 7, the max is 1.0 and min is -1.0
For feature 8, the max is 1.0 and min is -1.0
For feature 9, the max is 1.0 and min is -1.0
For feature 10, the max is 0.9992364645004272 and min is -0.9992365837097168
For feature 11, the max is 0.9992364645004272 and min is -0.9992365837097168
For feature 12, the max is 0.9992364645004272 and min is -0.9992365837097168
For feature 13, the max is 0.9992364645004272 and min is -0.9992365837097168
I am reading data from: ../Data/Yang_data/
Making network now
This is inference mode, the ckpt is /home/sr365/MM_Bench/cINN/models/fake_2k
The nodes are: [<FrEIA.framework.InputNode object at 0x7fea845614d0>, <FrEIA.framework.Node object at 0x7fea84561590>, <FrEIA.framework.Node object at 0x7fea84587950>, <FrEIA.framework.Node object at 0x7fea845879d0>, <FrEIA.framework.Node object at 0x7fea84587a50>, <FrEIA.framework.Node object at 0x7fea84587ad0>, <FrEIA.framework.Node object at 0x7fea84587b50>, <FrEIA.framework.Node object at 0x7fea84587bd0>, <FrEIA.framework.Node object at 0x7fea84587c50>, <FrEIA.framework.Node object at 0x7fea84587cd0>, <FrEIA.framework.Node object at 0x7fea84587d50>, <FrEIA.framework.Node object at 0x7fea84587dd0>, <FrEIA.framework.Node object at 0x7fea84587e50>, <FrEIA.framework.Node object at 0x7fea84587ed0>, <FrEIA.framework.Node object at 0x7fea84587f50>, <FrEIA.framework.Node object at 0x7fea84587fd0>, <FrEIA.framework.Node object at 0x7fea84588090>, <FrEIA.framework.Node object at 0x7fea84588110>, <FrEIA.framework.Node object at 0x7fea84588190>, <FrEIA.framework.Node object at 0x7fea84588210>, <FrEIA.framework.Node object at 0x7fea84588290>, <FrEIA.framework.Node object at 0x7fea84588310>, <FrEIA.framework.Node object at 0x7fea84588390>, <FrEIA.framework.Node object at 0x7fea84588410>, <FrEIA.framework.Node object at 0x7fea84588490>, <FrEIA.framework.Node object at 0x7fea84588510>, <FrEIA.framework.Node object at 0x7fea84588590>, <FrEIA.framework.OutputNode object at 0x7fea845885d0>, <FrEIA.framework.ConditionNode object at 0x7fea84561490>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'coupling_8' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_8' takes the following inputs:
	 Output #0 of node 'coupling_8' with dims (14,)

Node 'coupling_9' takes the following inputs:
	 Output #0 of node 'permute_8' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_9' takes the following inputs:
	 Output #0 of node 'coupling_9' with dims (14,)

Node 'coupling_10' takes the following inputs:
	 Output #0 of node 'permute_9' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_10' takes the following inputs:
	 Output #0 of node 'coupling_10' with dims (14,)

Node 'coupling_11' takes the following inputs:
	 Output #0 of node 'permute_10' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_11' takes the following inputs:
	 Output #0 of node 'coupling_11' with dims (14,)

Node 'coupling_12' takes the following inputs:
	 Output #0 of node 'permute_11' with dims (14,)
	 conditioned on node 'node' with dims (2000,)

Node 'permute_12' takes the following inputs:
	 Output #0 of node 'coupling_12' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_12' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (18): PermuteRandom()
    (19): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (20): PermuteRandom()
    (21): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (22): PermuteRandom()
    (23): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (24): PermuteRandom()
    (25): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2007, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (26): PermuteRandom()
    (27): dummy()
    (28): None
  )
)
fake_2k
number of trainable parameters is :
9751404
Start eval now:
Evaluation finished
Retrieving flag object for parameters
after removing prefix models/, now model_dir is: 20210226_111411
This is a meta-material dataset
getting data files...
['train79.csv', 'train90.csv', 'train42.csv', 'train93.csv', 'train32.csv', 'train6.csv', 'train67.csv', 'train28.csv', 'train29.csv', 'train3.csv', 'train64.csv', 'train115.csv', 'train60.csv', 'train86.csv', 'train8.csv', 'train45.csv', 'train83.csv', 'train18.csv', 'train4.csv', 'train65.csv', 'train82.csv', 'train62.csv', 'train24.csv', 'train87.csv', 'train40.csv', 'train43.csv', 'train116.csv', 'train106.csv', 'train54.csv', 'train41.csv', 'train44.csv', 'train75.csv', 'train99.csv', 'train35.csv', 'train103.csv', 'train108.csv', 'train73.csv', 'train33.csv', 'train39.csv', 'train100.csv', 'train31.csv', 'train71.csv', 'train13.csv', 'train17.csv', 'train58.csv', 'train21.csv', 'train96.csv', 'train114.csv', 'train112.csv', 'train57.csv', 'train77.csv', 'train37.csv', 'train53.csv', 'train88.csv', 'train109.csv', 'train72.csv', 'train49.csv', 'train46.csv', 'train101.csv', 'train74.csv', 'train50.csv', 'train1.csv', 'train19.csv', 'train36.csv', 'train70.csv', 'train20.csv', 'train63.csv', 'train78.csv', 'train22.csv', 'train30.csv', 'train34.csv', 'train66.csv', 'train10.csv', 'train110.csv', 'train117.csv', 'train51.csv', 'train102.csv', 'train84.csv', 'train26.csv', 'train59.csv', 'train7.csv', 'train97.csv', 'train76.csv', 'train81.csv', 'train23.csv', 'train27.csv', 'train14.csv', 'train12.csv', 'train120.csv', 'train118.csv', 'train48.csv', 'train105.csv', 'train61.csv', 'train92.csv', 'train89.csv', 'train47.csv', 'train25.csv', 'train113.csv', 'train16.csv', 'train98.csv', 'train91.csv', 'train11.csv', 'train52.csv', 'train119.csv', 'train85.csv', 'train5.csv', 'train56.csv', 'train94.csv', 'train80.csv', 'train9.csv', 'train107.csv', 'train111.csv', 'train68.csv', 'train95.csv', 'train104.csv', 'train69.csv', 'train2.csv', 'train38.csv', 'train55.csv', 'train15.csv']
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
For feature 0, the max is 0.6000000238418579 and min is 0.30000001192092896
For feature 1, the max is 1.5 and min is 1.0
For feature 2, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 3, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 4, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 5, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 6, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 7, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 8, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 9, the max is 0.20000000298023224 and min is 0.10000000149011612
For feature 10, the max is 0.7853999733924866 and min is -0.7853999733924866
For feature 11, the max is 0.7853999733924866 and min is -0.7853999733924866
For feature 12, the max is 0.7853999733924866 and min is -0.7853999733924866
For feature 13, the max is 0.7853999733924866 and min is -0.7853999733924866
Splitting training data into test set, the ratio is: 0.02
total number of training samples is 57506
total number of test samples is 1174 length of an input spectrum is 2001
downsampling output curves
length of downsampled train spectra is 2000 for first, 2000 for final,  set final layer size to be compatible with this number
length of downsampled test spectra is 2000,  set final layer size to be compatible with this number
generating torch dataset
After normalization:
For feature 0, the max is 1.0 and min is -1.0
For feature 1, the max is 1.0 and min is -1.0
For feature 2, the max is 1.0 and min is -1.0
For feature 3, the max is 1.0 and min is -1.0
For feature 4, the max is 1.0 and min is -1.0
For feature 5, the max is 1.0 and min is -1.0
For feature 6, the max is 1.0 and min is -1.0
For feature 7, the max is 1.0 and min is -1.0
For feature 8, the max is 1.0 and min is -1.0
For feature 9, the max is 1.0 and min is -1.0
For feature 10, the max is 0.9992364645004272 and min is -0.9992365837097168
For feature 11, the max is 0.9992364645004272 and min is -0.9992365837097168
For feature 12, the max is 0.9992364645004272 and min is -0.9992365837097168
For feature 13, the max is 0.9992364645004272 and min is -0.9992365837097168
I am reading data from: ../Data/Yang_data/
Making network now
This is inference mode, the ckpt is /home/sr365/MM_Bench/cINN/models/20210226_111411
The nodes are: [<FrEIA.framework.InputNode object at 0x7fea6531f710>, <FrEIA.framework.Node object at 0x7fea6531f2d0>, <FrEIA.framework.Node object at 0x7fea6531f150>, <FrEIA.framework.Node object at 0x7fea6531f6d0>, <FrEIA.framework.Node object at 0x7fea6531f050>, <FrEIA.framework.Node object at 0x7fea6531f210>, <FrEIA.framework.Node object at 0x7fea6531f190>, <FrEIA.framework.Node object at 0x7fea6531f790>, <FrEIA.framework.Node object at 0x7fea6531f110>, <FrEIA.framework.Node object at 0x7fea6531f3d0>, <FrEIA.framework.Node object at 0x7fea6531f550>, <FrEIA.framework.Node object at 0x7fea6531ff50>, <FrEIA.framework.Node object at 0x7fea6531ff90>, <FrEIA.framework.Node object at 0x7fea6531ff10>, <FrEIA.framework.Node object at 0x7fea6531fe90>, <FrEIA.framework.Node object at 0x7fea6531fe10>, <FrEIA.framework.Node object at 0x7fea6531fd90>, <FrEIA.framework.Node object at 0x7fea6531fd10>, <FrEIA.framework.Node object at 0x7fea6531fc90>, <FrEIA.framework.Node object at 0x7fea6531fc10>, <FrEIA.framework.Node object at 0x7fea6531fb90>, <FrEIA.framework.Node object at 0x7fea6531fb10>, <FrEIA.framework.Node object at 0x7fea6531fa90>, <FrEIA.framework.Node object at 0x7fea6531f650>, <FrEIA.framework.Node object at 0x7fea6531f610>, <FrEIA.framework.Node object at 0x7fea6531f590>, <FrEIA.framework.Node object at 0x7fea570e0f10>, <FrEIA.framework.OutputNode object at 0x7fea570e0c90>, <FrEIA.framework.ConditionNode object at 0x7fea6531f310>]
Node 'coupling_0' takes the following inputs:
	 Output #0 of node 'input' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_0' takes the following inputs:
	 Output #0 of node 'coupling_0' with dims (14,)

Node 'coupling_1' takes the following inputs:
	 Output #0 of node 'permute_0' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_1' takes the following inputs:
	 Output #0 of node 'coupling_1' with dims (14,)

Node 'coupling_2' takes the following inputs:
	 Output #0 of node 'permute_1' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_2' takes the following inputs:
	 Output #0 of node 'coupling_2' with dims (14,)

Node 'coupling_3' takes the following inputs:
	 Output #0 of node 'permute_2' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_3' takes the following inputs:
	 Output #0 of node 'coupling_3' with dims (14,)

Node 'coupling_4' takes the following inputs:
	 Output #0 of node 'permute_3' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_4' takes the following inputs:
	 Output #0 of node 'coupling_4' with dims (14,)

Node 'coupling_5' takes the following inputs:
	 Output #0 of node 'permute_4' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_5' takes the following inputs:
	 Output #0 of node 'coupling_5' with dims (14,)

Node 'coupling_6' takes the following inputs:
	 Output #0 of node 'permute_5' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_6' takes the following inputs:
	 Output #0 of node 'coupling_6' with dims (14,)

Node 'coupling_7' takes the following inputs:
	 Output #0 of node 'permute_6' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_7' takes the following inputs:
	 Output #0 of node 'coupling_7' with dims (14,)

Node 'coupling_8' takes the following inputs:
	 Output #0 of node 'permute_7' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_8' takes the following inputs:
	 Output #0 of node 'coupling_8' with dims (14,)

Node 'coupling_9' takes the following inputs:
	 Output #0 of node 'permute_8' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_9' takes the following inputs:
	 Output #0 of node 'coupling_9' with dims (14,)

Node 'coupling_10' takes the following inputs:
	 Output #0 of node 'permute_9' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_10' takes the following inputs:
	 Output #0 of node 'coupling_10' with dims (14,)

Node 'coupling_11' takes the following inputs:
	 Output #0 of node 'permute_10' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_11' takes the following inputs:
	 Output #0 of node 'coupling_11' with dims (14,)

Node 'coupling_12' takes the following inputs:
	 Output #0 of node 'permute_11' with dims (14,)
	 conditioned on node 'node' with dims (2001,)

Node 'permute_12' takes the following inputs:
	 Output #0 of node 'coupling_12' with dims (14,)

Node 'output' takes the following inputs:
	 Output #0 of node 'permute_12' with dims (14,)

ReversibleGraphNet(
  (module_list): ModuleList(
    (0): None
    (1): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (2): PermuteRandom()
    (3): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (4): PermuteRandom()
    (5): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (6): PermuteRandom()
    (7): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (8): PermuteRandom()
    (9): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (10): PermuteRandom()
    (11): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (12): PermuteRandom()
    (13): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (14): PermuteRandom()
    (15): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (16): PermuteRandom()
    (17): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (18): PermuteRandom()
    (19): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (20): PermuteRandom()
    (21): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (22): PermuteRandom()
    (23): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (24): PermuteRandom()
    (25): GLOWCouplingBlock(
      (s1): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
      (s2): Sequential(
        (0): Linear(in_features=2008, out_features=160, bias=True)
        (1): ReLU()
        (2): Linear(in_features=160, out_features=160, bias=True)
        (3): ReLU()
        (4): Linear(in_features=160, out_features=160, bias=True)
        (5): ReLU()
        (6): Linear(in_features=160, out_features=14, bias=True)
      )
    )
    (26): PermuteRandom()
    (27): dummy()
    (28): None
  )
)
20210226_111411
number of trainable parameters is :
9755564
Start eval now:
